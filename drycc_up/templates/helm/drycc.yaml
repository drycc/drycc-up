builder:
  replicas: 3
  imageRegistry: registry.drycc.cc

database:
  replicas: 3
  imageRegistry: registry.drycc.cc
  limitsMemory: 256Mi
  limitsHugepages2Mi: 256Mi
  initDatabases: "controller"
  persistence:
    enabled: true
    size: 8Gi
    storageClass: topolvm-ssd

fluentd:
  imageRegistry: registry.drycc.cc 
  daemonEnvironment:
    CONTAINER_TAIL_PARSER_TYPE: "/^(?<time>.+) (?<stream>stdout|stderr)( (?<tags>.))? (?<log>.*)$/"

controller:
  apiReplicas: 3
  celeryReplicas: 3
  webhookReplicas: 3
  imageRegistry: registry.drycc.cc
  appRuntimeClass: crun
  appStorageClass: drycc-storage
  {%- if global.certManagerEnabled == "true" %}
  passportUrl: "https://drycc-passport.{{global.managerDomain}}"
  {%- else %}
  passportUrl: "http://drycc-passport.{{global.managerDomain}}"
  {%- endif %}
  passportKey: {{controller.passportKey}}
  passportSecret: {{controller.passportSecret}}
  {%- if global.certManagerEnabled == "true" %}
  workflowManagerUrl: "https://drycc-manager.{{global.managerDomain}}/v1"
  {%- else %}
  workflowManagerUrl: "http://drycc-manager.{{global.managerDomain}}/v1"
  {%- endif %}
  workflowManagerAccessKey: {{controller.workflowManagerAccessKey}}
  workflowManagerSecretKey: {{controller.workflowManagerSecretKey}}

redis:
  replicas: 3
  imageRegistry: registry.drycc.cc
  persistence:
    enabled: true
    size: 8Gi
    storageClass: topolvm-ssd

storage:
  minio:
    zone: 1
    drives: 4
    replicas: 3
    imageRegistry: registry.drycc.cc
    persistence:
      enabled: true
      size: 20Gi
      storageClass: topolvm-ssd
  meta:
    pd:
      replicas: 3
      persistence:
        enabled: true
        size: 10Gi
        storageClass: topolvm-ssd
    tikv:
      replicas: 3
      persistence:
        enabled: true
        size: 10Gi
        storageClass: topolvm-ssd

rabbitmq:
  replicas: 3
  imageRegistry: registry.drycc.cc
  username: drycc
  password: {{64|random_ascii}}
  persistence:
    enabled: true
    size: 8Gi
    storageClass: topolvm-ssd

imagebuilder:
  imageRegistry: registry.drycc.cc
  container_registries: |
    unqualified-search-registries = ["docker.io"]
    short-name-mode="permissive"
    [[registry]]
    prefix = "docker.io"
    location = "registry-1.docker.io"
    [[registry.mirror]]
    prefix = "docker.io"
    location = "hub-mirror.c.163.com"

timeseries:
  mainReplicas: 2
  nodeReplicas: 3
  imageRegistry: registry.drycc.cc
  limitsMemory: 256Mi
  limitsHugepages2Mi: 256Mi
  initDatabases: "monitor"
  persistence:
    enabled: true
    size: 8Gi
    storageClass: topolvm-ssd

logger:
  replicas: 3
  imageRegistry: registry.drycc.cc

monitor:
  grafana:
    imageRegistry: registry.drycc.cc
    {%- if global.certManagerEnabled == "true" %}
    passportUrl: "https://drycc-passport.{{global.managerDomain}}"
    {%- else %}
    passportUrl: "http://drycc-passport.{{global.managerDomain}}"
    {%- endif %}
    passportKey: {{monitor.grafana.passportKey}}
    passportSecret: {{monitor.grafana.passportSecret}}
    persistence:
      enabled: true
      size: 8Gi
      storageClass: topolvm-ssd
  telegraf:
    imageRegistry: registry.drycc.cc

registry:
  replicas: 3
  imageRegistry: registry.drycc.cc

registry-proxy:
  imageRegistry: registry.drycc.cc

gateway:
  acme:
    server: {{acme.server}}
    externalAccountBinding:
      keyID: {{acme.externalAccountBinding.keyID}}
      keySecret: {{acme.externalAccountBinding.keySecret}}
  # gateway apps
  apps:
    - name: drycc-builder
      port: 2222
      protocol: TCP
      services:
      - name: drycc-builder
        port: 2222
    - name: drycc-controller
      port: 80
      hostname: drycc.{{ .Values.global.platformDomain }}
      protocol: HTTP
      services:
      - name: drycc-controller-api
        port: 80
    - name: drycc-rabbitmq
      port: 80
      hostname: drycc-rabbitmq.{{ .Values.global.platformDomain }}
      protocol: HTTP
      services:
      - name: drycc-rabbitmq
        port: 15672
    - name: drycc-prometheus
      port: 80
      hostname: drycc-prometheus.{{ .Values.global.platformDomain }}
      protocol: HTTP
      services:
      - name: drycc-prometheus
        port: 9090
    - name: drycc-monitor-grafana
      port: 80
      hostname: drycc-monitor-grafana.{{ .Values.global.platformDomain }}
      protocol: HTTP
      services:
      - name: drycc-monitor-grafana
        port: 80

global:
  email: {{global.email}}
  clusterDomain: {{global.clusterDomain}}
  platformDomain: {{global.workflowDomain}}
  certManagerEnabled: {{global.certManagerEnabled}}
  gatewayClass: {{global.gatewayClass}}
  passportLocation: "off-cluster"
